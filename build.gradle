plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

import net.fabricmc.loom.task.RunGameTask

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	repositories {
		mavenLocal()
		maven {
			name = 'COVID-Trump'
			url = 'https://covid-trump.github.io/mvn/'
		}
	}
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
//	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

allprojects {
	sourceSets {
		testmod {
			compileClasspath += main.compileClasspath
			runtimeClasspath += main.runtimeClasspath
		}
	}

	loom {
		runs {
			testmodClient {
				client()
				ideConfigGenerated project.rootProject == project
				name "Testmod Client"
				source = sourceSets.testmod
			}
			testmodServer {
				server()
				ideConfigGenerated project.rootProject == project
				name "Testmod Server"
				source = sourceSets.testmod
			}
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") { expand 'version': project.version }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
java {
	withSourcesJar()
}

jar {
	from ("LICENSE") {
		rename { "${it}_$archivesBaseName" }
	}
}

tasks.withType(RunGameTask.class).configureEach {
	it.jvmArgs "-Dmixin.debug.export=true"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = "$archivesBaseName"
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		mavenLocal()
	}
}
